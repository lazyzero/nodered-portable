name: Build Electron App for Windows and Linux

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # 1. Setup job to extract version from package.json
  setup:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
    - uses: actions/checkout@v4

    - name: Extract version
      id: get_version
      run: |
        VERSION=$(node -p "require('./package.json').version")
        echo "version=$VERSION" >> $GITHUB_OUTPUT

  # 2. Linux build
  build-linux:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Install Linux build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y fakeroot dpkg rpm libarchive-tools

    - name: Install dependencies
      run: npm install

    - name: Install app-deps
      run: npm run postinstall  

    - name: Build Electron App (Linux)
      run: npm run dist -- --publish=never
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: NodeREDPortable-${{ needs.setup.outputs.version }}-linux
        path: dist/*

  # 3. Windows build
  build-windows:
    needs: setup
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Install dependencies
      run: npm install

    - name: Install app-deps
      run: npm run postinstall

    - name: Build Electron App (Windows)
      run: npm run dist -- --publish=never
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: NodeREDPortable-${{ needs.setup.outputs.version }}-windows
        path: dist/*
